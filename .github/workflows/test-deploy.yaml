name:  Automated Tests

on:
  workflow_dispatch

env:
  rg:  ---

jobs:
  core:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.test_sp_id }} -p ${{ secrets.test_sp_secret }} --tenant ${{ secrets.test_tenant_id }}
    - name: Change subscription
      run: az account set -n ${{ secrets.test_subscription_id }}
    # Deploy the core (ADX + Logic App)
    - name: Deploy Core
      run: |
        cd deployment/core
        bash ../deploy.sh ${{ secrets.test_rg }} core.bicep 'East US 2'
    # Find cluster name & put it in environment variable
    - name: Find cluster name
      run: |
        clusterName=$(az kusto cluster list -g ${{ secrets.test_rg }} --query [0].name -o tsv)
        echo "Cluster Name:  $clusterName"
        echo "clusterName=$clusterName" >> $GITHUB_ENV
    # Start tests
    - name: Online doc JSON
      run: |
        cd deployment/online-help
        bash az deployment group create -n "deploy-$(uuidgen)" -g ${{ secrets.test_rg }} \
          --template-file "json-sample.json" \
          --parameters \
          clusterName=$clusterName \
          databaseName=onlineHelpJson \
          scriptName=myScript
    - name: Online doc Bicep
      run: |
        cd deployment/online-help
        bash az deployment group create -n "deploy-$(uuidgen)" -g ${{ secrets.test_rg }} \
          --template-file "bicep-sample.bicep" \
          --parameters \
          clusterName=$clusterName \
          databaseName=onlineHelpBicep \
          scriptName=myScript
    - name: Deploy One-Table
      run: |
        cd deployment/one-table
        bash ../deploy-in-cluster.sh ${{ secrets.test_rg }} one-table.bicep $clusterName 'East US 2'
    - name: Deploy One-Table-2
      run: |
        cd deployment/one-table
        bash ../deploy-in-cluster.sh ${{ secrets.test_rg }} one-table-2.bicep $clusterName 'East US 2'
    - name: Deploy Two-Tables
      run: |
        cd deployment/two-tables
        bash ../deploy-in-cluster.sh ${{ secrets.test_rg }} two-tables.bicep $clusterName 'East US 2'
    - name: Deploy Too-many-Tables
      run: |
        cd deployment/too-many-tables
        bash ../deploy-in-cluster.sh ${{ secrets.test_rg }} too-many-tables.bicep $clusterName 'East US 2'
